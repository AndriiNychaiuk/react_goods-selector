{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","clear","setState","select","good","includes","current","filter","item","message","length","slice","join","this","className","type","classNames","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,MAAQ,WACN,EAAKC,SAAS,CAAEF,cAAe,M,EAGjCG,OAAS,SAACC,GACH,EAAKL,MAAMC,cAAcK,SAASD,GAKrC,EAAKF,UAAS,SAACI,GAAD,MACZ,CAAEN,cAAeM,EAAQN,cAAcO,QAAO,SAAAC,GAAI,OAAIA,IAASJ,SALjE,EAAKF,UAAS,SAACI,GAAD,MAAc,CAC1BN,cAAc,GAAD,mBAAMM,EAAQN,eAAd,CAA6BI,S,EAShDK,QAAU,WACR,IAAQT,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUV,EAAc,GAAxB,gBAEF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBAEF,QACE,MAAM,GAAN,OAAUA,EAAcW,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDZ,EAAcW,OAAO,GAA5E,mB,4CAIN,WAAU,IAAD,OACCX,EAAkBa,KAAKd,MAAvBC,cAER,OACE,qBAAKc,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKJ,YAER,wBACEM,KAAK,SACLD,UAAWE,IAAW,cAAe,CACnC,sBAAgD,IAAzBhB,EAAcU,SAEvCO,QAASJ,KAAKZ,MALhB,mBASA,oBAAIa,UAAU,YAAd,SACGjB,EAAgBqB,KAAI,SAACd,GAAD,OACnB,qBAEEU,UAAWE,IAAW,YAAa,CACjC,sBAAuBhB,EAAcK,SAASD,KAHlD,UAMGA,EACD,wBACEW,KAAK,SACLD,UAAU,cACVG,QAAS,WACP,EAAKd,OAAOC,IAJhB,SAOGJ,EAAcK,SAASD,GAAQ,SAAW,cAbxCA,iB,GA5DHe,IAAMC,WAoFTtB,ICtGfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0d9e8fe2.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[],\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  clear = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  select = (good: string) => {\n    if (!this.state.selectedGoods.includes(good)) {\n      this.setState((current) => ({\n        selectedGoods: [...current.selectedGoods, good],\n      }));\n    } else {\n      this.setState((current) => (\n        { selectedGoods: current.selectedGoods.filter(item => item !== good) }\n      ));\n    }\n  };\n\n  message = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      case 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__container\">\n          <h1 className=\"App__title\">\n            {this.message()}\n          </h1>\n          <button\n            type=\"button\"\n            className={classNames('App__button', {\n              'App__button--hidden': selectedGoods.length === 0,\n            })}\n            onClick={this.clear}\n          >\n            clear\n          </button>\n          <ul className=\"App__list\">\n            {goodsFromServer.map((good) => (\n              <li\n                key={good}\n                className={classNames('App__item', {\n                  'App__item--selected': selectedGoods.includes(good),\n                })}\n              >\n                {good}\n                <button\n                  type=\"button\"\n                  className=\"App__button\"\n                  onClick={() => {\n                    this.select(good);\n                  }}\n                >\n                  {selectedGoods.includes(good) ? 'Remove' : 'Select '}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}